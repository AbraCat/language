// OP_CODEGEN(name, n_operands, value, priority, text, asm_instr)

OP_CODEGEN(B,             2, (arg1 <  arg2),     1, "les", "jl")
OP_CODEGEN(BE,            2, (arg1 <= arg2),     1, "leq", "jle")
OP_CODEGEN(A,             2, (arg1 >  arg2),     1, "gre", "jg")
OP_CODEGEN(AE,            2, (arg1 >= arg2),     1, "geq", "jge")
OP_CODEGEN(E,             2, (arg1 == arg2),     1, "eq",  "je")
OP_CODEGEN(NE,            2, (arg1 != arg2),     1, "neq", "jne")
   
OP_CODEGEN(ADD,           2, (arg1 + arg2),      2, "+",    "add")
OP_CODEGEN(SUB,           2, (arg1 - arg2),      2, "-",    "sub")
OP_CODEGEN(MUL,           2, (arg1 * arg2),      3, "*",    "imul")
OP_CODEGEN(DIV,           2, (arg1 / arg2),      3, "/",    "idiv")
OP_CODEGEN(XOR,           2, (arg1 ^ arg2),      4, "^",    "xor")

OP_CODEGEN(ASSIGN,        2, 0,                  0, "=",      NULL)
OP_CODEGEN(IF,            2, 0,                  0, "if",     NULL)
OP_CODEGEN(ELSE,          1, 0,                  0, "else",   NULL)
OP_CODEGEN(WHILE,         2, 0,                  0, "while",  NULL)
OP_CODEGEN(RET,           1, 0,                  0, "return", NULL)
OP_CODEGEN(FUNC,          3, 0,                  0, "func",   NULL)
OP_CODEGEN(VAR,           1, 0,                  0, "var",    NULL)
OP_CODEGEN(COMMA,         2, 0,                  0, ",",      NULL)
      
OP_CODEGEN(OPEN_BRACKET,  0, 0,                  0, "(",      NULL)
OP_CODEGEN(CLOSE_BRACKET, 0, 0,                  0, ")",      NULL)
OP_CODEGEN(END,           0, 0,                  0, "$",      NULL)
